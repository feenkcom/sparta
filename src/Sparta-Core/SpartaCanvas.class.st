"
! SpartaCanvas
I represent a Sparta canvas and provide an API to perform various drawing operations.
I define an abstract API of Sparta canvas that all concrete implementations must have.

!! Overview
My main responsibility is to create and provide backend specific builders and various objects.

In order to create and perform a drawing operation users should rely on corresponding builder.
For example if one wants to fill a path with a paint she needs to send #fill message to canvas to get a fill builder (painter).

There is a separate builder for every single operation. They can be found in ""api"" protocol.

I'm also responsible for creation of filter primitives (filter types) that are used with ""filter"" operation.
They can be found in ""filters"" protocol.

I am polymorphic with ==SpartaSurface==.

!! Public API and Key Messages

- ==fill== - create a builder of fill drawing operation  
- ==stroke== - create a builder of stroke drawing operation
- ==path== - create a path builder
- ==paint== - create a paint builder (linear, radial gradients)
- ==clip== - create a builder to clip canvas by path (or rectangle)
- ==transform== - create a builder to transform canvas
- ==font== - create a font build helper
- ==text== - create a text rendering builder
- ==filter== - create a builder of filter drawing operation
- ==mask== - create a builder of masking draw operation
- ==bitmap== - create a bitmap factory
- ==shape== - create a common shapes factory (ellipse, rounded rectangle, etc)
- ==filters== - create a common filters factory

- ==extent== - get my size (width@height)
- ==similar:== - to create an empty canvas of size anExtent and of the same type and format 
- ==asForm== - to rasterize myself and return resulting image as Form

''I am an abstract class and should not be instantiated. However, the best way to create an instance of sparta canvas is to send extent: message.''

!! Example:

Create an empty canvas of size 400@250:
[[[language=smalltalk
canvas := SpartaCanvas extent: 400@250.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/01_empty.png|label=emptyCanvas+


Create a triangle vector path:
[[[language=smalltalk
triangle := canvas path
	moveTo: 100@0;
	lineTo: 200@200;
	lineTo: 0@200;
	close;
	finish.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/02_triangle_path.png|label=trianglePath+

Create a linear gradient:
[[[language=smalltalk
linearGradient := canvas paint linearGradient
	begin: 50@100;
	end: 150@200;
	stops: { 0 -> Color red. 1 -> Color blue }.
]]]

Apply translation to place trangle in the center:
[[[language=smalltalk
canvas transform
	push;
	translateBy: 100@25;
	apply.
]]]

Fill previously created path fith linear gradient:
[[[language=smalltalk
canvas fill
	paint: linearGradient;
	path: triangle;
	draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/03_fill_path.png|label=fillPath+

Stroke triangle with blue color:
[[[language=smalltalk
canvas stroke
	paint: Color blue;
	path: triangle;
	width: 6;
	draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/04_stroke_path.png|label=strokePath+

Restore transformation matrix:
[[[language=smalltalk
canvas transform pop.
]]]

Create a gaussian blur filter:
[[[language=smalltalk
blur := canvas gaussianBlurFilter
	stdDeviation: 4.
]]]

Apply filter on the whole canvas:
[[[language=smalltalk
canvas filter
	area: canvas bounds;
	type: blue;
	draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/05_blur.png|label=blur+

"
Class {
	#name : #SpartaCanvas,
	#superclass : #Object,
	#traits : 'TSpartaInspectorPreview + TSpartaSurface',
	#classTraits : 'TSpartaInspectorPreview classTrait + TSpartaSurface classTrait',
	#instVars : [
		'composeOperators'
	],
	#category : #'Sparta-Core'
}

{ #category : #help }
SpartaCanvas class >> apiHelp [
	^ String streamContents: [ :stream |
		stream
			nextPutAll: self pathHelp;
			nextPut: Character cr;
			nextPut: Character cr;
			nextPutAll: self clipHelp;
			nextPut: Character cr;
			nextPut: Character cr;
			nextPutAll: self fillHelp;
			nextPut: Character cr;
			nextPut: Character cr;
			nextPutAll: self strokeHelp ]
]

{ #category : #help }
SpartaCanvas class >> clipHelp [
	^
'canvas clip
	- to start clipping drawing region
	
	canvas clip
		by: (0@0 extent: 200@200)
		during: [ "perform drawing operations here" ]
		
	or
	
	canvas clip
		push: (0@0 extent: 200@200).
	"perform drawing operations here"
	canvas clip
		pop'
]

{ #category : #accessing }
SpartaCanvas class >> drawOptions [
	^ self subclassResponsibility
]

{ #category : #'api - instance creation' }
SpartaCanvas class >> extent: aPoint [
	^ self subclassResponsibility
]

{ #category : #help }
SpartaCanvas class >> fillHelp [
	^
'canvas fill
	- to start creating a fill draw operation
	
	canvas fill
		path: (0@0 extent: 200@200)
		paint: Color red;
		draw'
]

{ #category : #'gt-inspector-extension' }
SpartaCanvas class >> gtInspectorHelpIn: composite [
	<gtInspectorPresentationOrder: 1>  
	^ composite text 
		title: 'Help';
		display: self apiHelp
]

{ #category : #'instance creation' }
SpartaCanvas class >> logo [
	^ Form
		extent: 100@100
		depth: 32
		fromArray
		offset: 0@0
]

{ #category : #help }
SpartaCanvas class >> pathHelp [
	^
'canvas path
	- to start creating a path using path builder
	
	canvas path
		moveTo: 150@50;
		lineTo: 250@250;
		curveVia: 150@300 to: 50@250;
		close;
		finish'
]

{ #category : #'api - instance creation' }
SpartaCanvas class >> pdf: aFileName extent: aPoint [
	^ self subclassResponsibility
]

{ #category : #help }
SpartaCanvas class >> strokeHelp [
	^
'canvas stroke
	- to start creating a stroke draw operation
	
	canvas stroke
		path: (0@0 extent: 200@200)
		paint: Color red;
		draw'
]

{ #category : #accessing }
SpartaCanvas class >> strokeOptions [
	^ self subclassResponsibility
]

{ #category : #'api - instance creation' }
SpartaCanvas class >> svg: aFileName extent: aPoint [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> arithmeticCombineFilter [
	^ self subclassResponsibility
]

{ #category : #converting }
SpartaCanvas >> asCheckerForm [
	| checker |
	
	self isValid
		ifFalse: [ ^ Form extent: 50@50 depth: 32 ].
	
	checker := self class checker: self extent.
	checker fill
		paint: self;
		path: self bounds;
		draw.

	^ checker asForm
]

{ #category : #converting }
SpartaCanvas >> asFilterSecondSourceOn: aFilter [
	aFilter secondSourceCanvas: self
]

{ #category : #converting }
SpartaCanvas >> asFilterSourceOn: aFilter [
	aFilter sourceCanvas: self
]

{ #category : #converting }
SpartaCanvas >> asForm [
	^ self subclassResponsibility
]

{ #category : #converting }
SpartaCanvas >> asSpartaPaintOn: aCanvas [
	^ self snapshot asSpartaPaintOn: aCanvas
]

{ #category : #api }
SpartaCanvas >> batch [
	^ self batchProcessor
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> batchProcessor [
	
	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaBatcher new
]

{ #category : #api }
SpartaCanvas >> bitmap [
	"Return a surface bitmap factory.
	It allows developers to create surfaces from various sources,
	for example from a Form or a picture on the disk.
	See !SpartaBitmapBuilder 'bitmap' protocol for available api.

	canvas bitmap fromForm: (Smalltalk ui icons iconNamed: #classIcon).
	canvas bitmap fromFileNamed: 'images/kitty.jpg'
	"
	<return: #SpartaBitmapBuilder>
	
	^ self bitmapBuilder
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> bitmapBuilder [

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedBitmapBuilder new
]

{ #category : #api }
SpartaCanvas >> clip [
	"Perform a clipping.
	User gets a clipper object responsible for clipping.
	See !SpartaClipper 'clipping' protocol for available api.

	canvas clip
		by: (0@0 extent: 300@350)
		during: [ 'perform drawing operations here' ].
	
	or:

	canvas clip
		push: (0@0 extent: 300@350).

	'perform drawing operations here'

	canvas clip
		pop.
	"
	<return: #SpartaClipper>

	^ self clipBuilder
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> clipBuilder [
	"Return a new instance of the backend specific ${class:SpartaClipper}$"

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedClipper new
]

{ #category : #filters }
SpartaCanvas >> colorMatrixFilter [
	^ self subclassResponsibility
]

{ #category : #override }
SpartaCanvas >> compose: aSymbol during: aBlock [
	"Force use a given composite operator during evaluation of aBlock"
	composeOperators push: aSymbol.
	self defaultDrawOptions perform: aSymbol.
	
	aBlock ensure: [
		composeOperators pop.
		composeOperators
			ifEmpty: [ self defaultDrawOptions composeOver ]
			ifNotEmpty: [ :theOperators | self defaultDrawOptions perform: theOperators top ] ]
]

{ #category : #override }
SpartaCanvas >> compose: aSymbol when: aWhenBlock during: aBlock [
	"Force use a given composite operator during evaluation of aBlock
	if aWhenBlock evaluates to true"
	
	aWhenBlock value
		ifTrue: [ self compose: aSymbol during: aBlock ]
		ifFalse: [ aBlock value ]
]

{ #category : #filters }
SpartaCanvas >> compositeFilter [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> convolveMatrixFilter [
	^ self subclassResponsibility
]

{ #category : #'instance creation' }
SpartaCanvas >> defaultDrawOptions [
	^ self class drawOptions default
]

{ #category : #'instance creation' }
SpartaCanvas >> defaultStrokeOptions [
	^ self class strokeOptions default
]

{ #category : #filters }
SpartaCanvas >> diffuseDistantLightFilter [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> diffusePointLightFilter [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> diffuseSpotLightFilter [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> discreteTransferFilter [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> displacementMapFilter [
	^ self subclassResponsibility
]

{ #category : #'instance creation' }
SpartaCanvas >> drawOptions [
	^ self class drawOptions new
		in: [ :aDrawOptions | composeOperators ifNotEmpty: [ :theOperators | aDrawOptions perform: theOperators top ] ];
		yourself
]

{ #category : #accessing }
SpartaCanvas >> extent [
	"Return my extent as point (width @ height).
	extent can not be nil"
	<return: #Point>
	
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> figure [
	<return: #SpartaFigurePainter>

	^ self figurePainter
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> figurePainter [
	^ SpartaFigurePainter new
]

{ #category : #api }
SpartaCanvas >> fill [
	"Start building a fill draw operation.
	User gets a fill painter responsible for fill creation.
	See !SpartaFillPainter and !SpartaPathPainter 'accessing' protocol
	for available api.

	canvas fill
		paint: Color red;
		path: (0@0 extent: 300@350);
		draw
	"
	<return: #SpartaFillPainter>

	^ self fillPainter
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> fillPainter [
	self subclassResponsibility.
	^ SpartaFillPainter new
]

{ #category : #api }
SpartaCanvas >> filter [
	"Start building a filter draw operation.
	User gets a filter painter responsible for filter creation.
	See !SpartaFilterPainter 'accessing' protocol for available api.
	Also refer to my 'filter' protocol in order to create specific
	filter types.

	canvas filter
		area: (00@00 extent: 300@350);
		type: (canvas gaussianBlurFilter
			stdDeviation: 4;
			source: canvas surface);
		draw
	"
	<return: #SpartaFilterPainter>
	
	^ self filterPainter
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> filterPainter [

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedFilterPainter new
]

{ #category : #api }
SpartaCanvas >> filters [
	
	^ self filtersFactory
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> filtersFactory [
	^ SpartaFiltersFactory new
]

{ #category : #filters }
SpartaCanvas >> floodFilter [
	^ self subclassResponsibility
]

{ #category : #accessing }
SpartaCanvas >> flush [
	"Ensure that the backend has flushed all drawing operations to this canvas"
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> font [
	^ self fontBuilder
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> fontBuilder [
	<return: #SpartaFontBuilder>
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> fontFace [
	^ self fontFaceBuilder
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> fontFaceBuilder [

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedFontFaceBuilder new
]

{ #category : #filters }
SpartaCanvas >> gammaTransferFilter [
	^ self subclassResponsibility
]

{ #category : #'gt-inspector-extension' }
SpartaCanvas >> gtInspectorHelpIn: composite [
	<gtInspectorPresentationOrder: 91>  
	^ self class gtInspectorHelpIn: composite
]

{ #category : #'gt-inspector-extension' }
SpartaCanvas >> gtPreviewFor: aView [
	<gtView>
	^ aView explicit
		title: 'Preview';
		priority: 1;
		stencil: [ self asForm asElement ]
]

{ #category : #accessing }
SpartaCanvas >> identity [
	<return: #Object>

	^ self class
]

{ #category : #initialization }
SpartaCanvas >> initialize [
	super initialize.
	
	composeOperators := Stack new
]

{ #category : #testing }
SpartaCanvas >> isValid [
	"Return true if canvas is correctly initialized (not a null pointer)
	and is actually valid that is determined by a backend"
	<return: #Boolean>

	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> layer [

	<return: #SpartaLayerBuilder>

	^ self layerBuilder
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> layerBuilder [
	"Return a new instance of the backend specific ${class:SpartaLayerBuilder}$"

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedLayerBuilder new
]

{ #category : #filters }
SpartaCanvas >> linearTransferFilter [
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> mask [
	"Start building a mask draw operation.
	User gets a mask painter responsible for mask creation.
	See !SpartaMaskPainter 'accessing' protocol for available api.
	
	canvas mask
		source: Color green;
		mask: canvas surface;
		draw
	"
	<return: #SpartaMaskPainter>

	^ self maskPainter
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> maskPainter [
	self subclassResponsibility.
	^ SpartaMaskPainter new
]

{ #category : #filters }
SpartaCanvas >> morphologyFilter [
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> paint [
	"Start building a backend specific paint.
	User gets a paint provider responsible for paint creation.
	See !SpartaPaintProvider for available api.
	
	canvas paint radialGradient
		innerCenter: 150@150;
		outerRadius: 100;
		reflect;
		stops: { 0 -> Color white . 1 -> Color veryVeryLightGray }
	"
	<return: #SpartaPaintProvider>
		
	^ self paintProvider
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> paintProvider [
	"Return a new instance of the backend specific ${class:SpartaPaintProvider}$"

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedPaintProvider new
]

{ #category : #api }
SpartaCanvas >> path [
	"Start building a vector path with non-zero winding(default) fill rule.
	User gets a path builder responsible for path creation.
	See !TSpartaPathBuilder for available api.
	
	canvas path
		moveTo: 150@50;
		lineTo: 250@250;
		curveVia: 150@300 to: 50@250;
		close;
		finish.
	"
	<return: #TSpartaPathBuilder>

	^ self path: SpartaFillRule winding
]

{ #category : #api }
SpartaCanvas >> path: aSpartaFillRule [
	"Start building a vector path with a provided fill rule as a symbol.
	User gets a path builder responsible for path creation.
	See !TSpartaPathBuilder for available api.
	
	(canvas path: SpartaFillRule winding)
		moveTo: 150@50;
		lineTo: 250@250;
		curveVia: 150@300 to: 50@250;
		close;
		finish.
		
	(canvas path: SpartaFillRule evenOdd)
		moveTo: 150@50;
		lineTo: 250@250;
		curveVia: 150@300 to: 50@250;
		close;
		finish.
	"
	<return: #TSpartaPathBuilder>

	self
		assert: [ aSpartaFillRule isKindOf: SpartaFillRule ]
		description: [ 'I must be an instance of `SpartaFillRule`' ].

	^ (aSpartaFillRule newPathBuilder: self pathBuilderClass canvas: self)
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> pathBuilderClass [
	<return: #'TSpartaPathBuilder class'>

	true ifFalse: [ self subclassResponsibility ].	
	^ SpartaUnimplementedPathBuilder
]

{ #category : #api }
SpartaCanvas >> shadow [
	^ self shadowPainter
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> shadowPainter [
	"Return a new instance of the backend specific ${class:SpartaShadowPainter}$"

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedShadowPainter new
]

{ #category : #api }
SpartaCanvas >> shape [
	<return: #SpartaShapeFactory>
	^ self shapeFactory
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> shapeFactory [
	<return: #SpartaShapeFactory>

	true ifFalse: [ self subclassResponsibility ].
	^ SpartaShapeFactory new
]

{ #category : #'instance creation' }
SpartaCanvas >> similar: anExtent [
	"Create a new empty canvas of the same type and format with a given size.
	anExtent must not be nil"
	<return: #SpartaCanvas>

	^ self subclassResponsibility
]

{ #category : #'instance creation' }
SpartaCanvas >> similar: anExtent during: aBlock [
	"Create a new empty canvas of the same type and format with a given size.
	The canvas lives during evaluation of a given block
	anExtent must not be nil"
	<return: #SpartaCanvas>

	^ aBlock value: (self similar: anExtent)
]

{ #category : #accessing }
SpartaCanvas >> snapshot [
	"Return a copy of a surface I used to draw on.
	A surface is a snapshot of my current drawing state.
	It can be used as paint, mask, as input source in a filter
	and can be blended differently on me or another canvas (with shadow,
	3d transformation, composition mode or directly)"
	<return: #TSpartaSurface>

	^ self subclassResponsibility
]

{ #category : #accessing }
SpartaCanvas >> snapshotDuring: aBlock [
	"I am similar to #snaphot but I guarantee that snapshot is not auto-released
	and is destroyed after evaluation of the block.
	Default implementation simply passes snaphot to the block"

	aBlock value: self snapshot
]

{ #category : #dispatch }
SpartaCanvas >> spartaMaskOn: aSpartaCanvas with: aMaskPainter [

	self surface spartaMaskOn: aSpartaCanvas with: aMaskPainter
]

{ #category : #filters }
SpartaCanvas >> specularDistantLightFilter [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> specularPointLightFilter [
	^ self subclassResponsibility
]

{ #category : #filters }
SpartaCanvas >> specularSpotLightFilter [
	^ self subclassResponsibility
]

{ #category : #accessing }
SpartaCanvas >> stride [
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> stroke [
	"Start building a stroke draw operation.
	User gets a stroke painter responsible for stroke creation.
	See SpartaStrokePainter and SpartaPathPainter 'accessing' protocol
	for available api.

	canvas stroke
		paint: (Color blue alpha: 0.8);
		path: (0@0 extent: 300@350);
		strokeOptions: (canvas strokeOptions
			width: 5);
		draw."

	^ self strokePainter
		reset;
		canvas: self;
		yourself
]

{ #category : #'instance creation' }
SpartaCanvas >> strokeOptions [
	^ self class strokeOptions new
]

{ #category : #builders }
SpartaCanvas >> strokePainter [
	self subclassResponsibility.
	^ SpartaStrokePainter new
]

{ #category : #accessing }
SpartaCanvas >> surface [
	"Return a copy of a surface I used to draw on.
	A surface is a snapshot of my current drawing state.
	It can be used as paint, mask, as input source in a filter
	and can be blended differently on me or another canvas (with shadow,
	3d transformation, composition mode or directly)"
	<return: #TSpartaSurface>

	self deprecated: 'Use #snapshot instead.' transformWith: '`@receiver surface' -> '`@receiver snapshot'.
	^ self snapshot
]

{ #category : #filters }
SpartaCanvas >> tableTransferFilter [
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> text [

	^ self textPainter
		reset;
		canvas: self;
		yourself
]

{ #category : #builders }
SpartaCanvas >> textPainter [
	<return: #SpartaTextPainter>
	^ self subclassResponsibility
]

{ #category : #api }
SpartaCanvas >> transform [

	^ self transformationBuilder
		reset;
		canvas: self;
		yourself
]

{ #category : #filters }
SpartaCanvas >> transformFilter [
	^ self subclassResponsibility
]

{ #category : #builders }
SpartaCanvas >> transformationBuilder [
	"Return a new instance of the backend specific ${class:SpartaTransformationBuilder}$"

	true ifFalse: [ ^ self subclassResponsibility ].
	^ SpartaUnimplementedTransformationBuilder new
]

{ #category : #filters }
SpartaCanvas >> turbulenceFilter [
	^ self subclassResponsibility
]
